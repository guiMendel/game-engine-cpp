# Which compiler to use
CC = g++

# === DIRECTORY LOCATIONS =======================

# Where to find the include folder
INCLUDE_DIRECTORY = ./include

# Where to find the objects folder
OBJECT_DIRECTORY = ./src/obj

# Where to find source code
SOURCE_DIRECTORY = ./src

# SDL Include Directory
SDL_INCLUDE = $(shell sdl2-config --cflags)

# SDL Library Directory
SDL_LIBRARY = $(shell sdl2-config --libs)

# === ARGUMENTS ================================

# Which libraries to include
LIBS = -lSDL2-2.0.0 -lSDL2_image -lSDL2_mixer

# Additional compilation arguments
COMPILER_FLAGS = -std=c++17 -Wall -Wextra -pedantic

# Compilation arguments
COMPILATION_ARGS = -I $(INCLUDE_DIRECTORY) $(SDL_INCLUDE) $(COMPILER_FLAGS)

# === FILES ===================================

# Header files
_DEPS = Game.h GameState.h Sprite.h Helper.h Music.h Vector2.h Rectangle.h Component.h GameObject.h Sound.h TileSet.h TileMap.h Resources.h InputManager.h Camera.h CameraFollower.h

# Generate header filepaths
DEPS = $(patsubst %,$(INCLUDE_DIRECTORY)/%,$(_DEPS))

# Object files
_OBJS = main.o Game.o GameState.o Sprite.o Music.o GameObject.o Sound.o TileSet.o TileMap.o Resources.o InputManager.o Camera.o

# Generate object filepaths
OBJS = $(patsubst %,$(OBJECT_DIRECTORY)/%,$(_OBJS))

# === RULES ===================================

# Define how to make .o files, and make them dependent on their .c counterparts and the h files
$(OBJECT_DIRECTORY)/%.o: $(SOURCE_DIRECTORY)/%.cpp $(DEPS)
	mkdir -p $(OBJECT_DIRECTORY); $(CC) -c -o $@ $< $(COMPILATION_ARGS)
	
# Makes the game
game: $(OBJS)
	$(CC) $^ $(COMPILATION_ARGS) $(LIBS) $(SDL_LIBRARY) -o $@

.PHONY: clean

clean:
	rm -f -r $(OBJECT_DIRECTORY); rm -f game